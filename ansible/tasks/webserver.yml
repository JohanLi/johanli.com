---
- hosts: webserver

  tasks:

  # https://github.com/nodesource/distributions
  - name: add NodeSource package signing key
    apt_key:
      url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key

  - name: add NodeSource repository
    apt_repository:
      repo: "{{ item }}"
      state: present
      filename: nodesource.list
    loop:
      - deb https://deb.nodesource.com/node_12.x disco main
      - deb-src https://deb.nodesource.com/node_12.x disco main

 # https://nginx.org/en/linux_packages.html
  - name: add nginx package signing key
    apt_key:
      url: https://nginx.org/keys/nginx_signing.key

  - name: add nginx repository
    apt_repository:
      repo: "{{ item }}"
      state: present
      filename: nginx.list
    loop:
      - deb https://nginx.org/packages/mainline/ubuntu/ disco nginx
      - deb-src https://nginx.org/packages/mainline/ubuntu/ disco nginx

  - name: install nodejs, git, nginx, ntp, certbot
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
      force_apt_get: yes
    vars:
      packages:
        - nodejs
        - git
        - nginx
        - ntp
        - certbot

  - name: setup let's encrypt certificate
    command: certbot certonly --standalone --noninteractive --agree-tos --email johan@johanli.com -d {{ domain }} --pre-hook "service nginx stop" --post-hook "service nginx start"

  - name: verify that renewal works
    command: certbot renew --dry-run

  - name: delete default server block
    file:
      path: /etc/nginx/conf.d/default.conf
      state: absent

  - name: add server block
    template:
      src: ../templates/server-block.conf
      dest: /etc/nginx/conf.d/{{ domain }}.conf

  - name: restart nginx
    service:
      name: nginx
      enabled: yes
      state: restarted

  - name: deploy master branch
    git:
      repo: https://github.com/JohanLi/johanli.com.git
      dest: /var/www/{{ domain }}
      force: yes

  - name: deploy static files
    synchronize:
      src: ../../build/
      dest: /var/www/{{ domain }}/build/

  - name: deploy .env file
    copy:
      src: ../templates/.env
      dest: /var/www/{{ domain }}/.env

  - name: install latest npm
    command: npm install -g npm

  - name: npm install
    command: "npm install --production chdir=/var/www/{{ domain }}"

  - name: register application as a service
    template:
      src: ../templates/systemd.service
      dest: /lib/systemd/system/{{ domain }}.service
